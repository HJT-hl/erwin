{"ast":null,"code":"import { useState } from 'react';\nexport const observe = (state, config = {\n  funReg: /^set/\n}) => {\n  var _s = $RefreshSig$();\n\n  const reflashQueue = [];\n  const stateProxy = new Proxy(state, {\n    get(target, key) {\n      if (key.match(config.funReg)) {\n        console.log(target[key]);\n        return target[key].bind(state);\n      }\n\n      return 100;\n    },\n\n    set(target, key, value) {\n      if (key.match(config.funReg)) return false;\n      state[key] = value;\n      const length = reflashQueue.length;\n\n      for (let i = 0; i < length; i++) {\n        const [r, reflash] = reflashQueue.shift();\n        reflash(r + 1);\n      }\n\n      return true;\n    }\n\n  });\n  return _s(() => {\n    _s();\n\n    reflashQueue.push(useState(0));\n    return stateProxy;\n  }, \"rGEI62VsuwnwPY/75ViYiWAYY24=\");\n};","map":{"version":3,"sources":["C:/Users/HL/Desktop/erwin/src/utils.js"],"names":["useState","observe","state","config","funReg","reflashQueue","stateProxy","Proxy","get","target","key","match","console","log","bind","set","value","length","i","r","reflash","shift","push"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAM,GAAG;AACnCC,EAAAA,MAAM,EAAG;AAD0B,CAAhB,KAElB;AAAA;;AACD,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,UAAU,GAAG,IAAIC,KAAJ,CAAUL,KAAV,EAAgB;AAC/BM,IAAAA,GAAG,CAACC,MAAD,EAAQC,GAAR,EAAY;AACX,UAAGA,GAAG,CAACC,KAAJ,CAAUR,MAAM,CAACC,MAAjB,CAAH,EAA8B;AAC1BQ,QAAAA,OAAO,CAACC,GAAR,CAAaJ,MAAM,CAACC,GAAD,CAAnB;AACA,eAAOD,MAAM,CAACC,GAAD,CAAN,CAAYI,IAAZ,CAAiBZ,KAAjB,CAAP;AACH;;AACD,aAAO,GAAP;AACH,KAP8B;;AAQ/Ba,IAAAA,GAAG,CAACN,MAAD,EAAQC,GAAR,EAAYM,KAAZ,EAAkB;AACjB,UAAGN,GAAG,CAACC,KAAJ,CAAUR,MAAM,CAACC,MAAjB,CAAH,EAA6B,OAAO,KAAP;AAC7BF,MAAAA,KAAK,CAACQ,GAAD,CAAL,GAAaM,KAAb;AACA,YAAMC,MAAM,GAAGZ,YAAY,CAACY,MAA5B;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,MAAd,EAAqBC,CAAC,EAAtB,EAAyB;AACrB,cAAM,CAACC,CAAD,EAAGC,OAAH,IAAcf,YAAY,CAACgB,KAAb,EAApB;AACAD,QAAAA,OAAO,CAACD,CAAC,GAAC,CAAH,CAAP;AACH;;AACD,aAAO,IAAP;AACH;;AAjB8B,GAAhB,CAAnB;AAmBA,YAAO,MAAI;AAAA;;AACPd,IAAAA,YAAY,CAACiB,IAAb,CAAkBtB,QAAQ,CAAC,CAAD,CAA1B;AACA,WAAOM,UAAP;AACH,GAHD;AAIH,CA3BM","sourcesContent":["import {useState} from 'react';\r\nexport const observe = (state,config = {\r\n    funReg : /^set/\r\n}) =>{\r\n    const reflashQueue = [];\r\n    const stateProxy = new Proxy(state,{\r\n        get(target,key){\r\n            if(key.match(config.funReg))  {\r\n                console.log( target[key]);\r\n                return target[key].bind(state);\r\n            }\r\n            return 100\r\n        },\r\n        set(target,key,value){\r\n            if(key.match(config.funReg)) return false;\r\n            state[key] = value;\r\n            const length = reflashQueue.length;\r\n            for(let i=0;i<length;i++){\r\n                const [r,reflash] = reflashQueue.shift();\r\n                reflash(r+1);\r\n            }\r\n            return true;\r\n        }\r\n    })\r\n    return ()=>{\r\n        reflashQueue.push(useState(0))\r\n        return stateProxy\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}