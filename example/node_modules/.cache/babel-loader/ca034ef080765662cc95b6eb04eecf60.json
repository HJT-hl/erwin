{"ast":null,"code":"var _jsxFileName = \"F:\\\\erwin\\\\example\\\\src\\\\App.js\";\n// import {observe,config} from './utils';\n// config.private = false;\n// config.funReg = /^set/;\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst observe = state => {\n  var _s = $RefreshSig$();\n\n  const reflashMap = new Map();\n  const stateProxy = new Proxy(state, {\n    set(target, key, value) {\n      target[key] = value;\n\n      for (const [r, reflash] of reflashMap.value()) {\n        reflash(r + 1);\n      }\n\n      return true;\n    }\n\n  });\n  return _s(key => {\n    _s();\n\n    reflashMap.set(key, useState(0));\n    return stateProxy;\n  }, \"rGEI62VsuwnwPY/75ViYiWAYY24=\");\n};\n\nconst countState = observe({\n  count: 0,\n\n  addCount() {\n    setTimeout(() => this.count += 1, 0);\n  }\n\n}, {\n  funReg: /^add/\n});\n\nfunction App() {\n  const c = countState('App');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [c.count, /*#__PURE__*/_jsxDEV(AddBtn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), c.count % 2 ? /*#__PURE__*/_jsxDEV(Show, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst AddBtn = () => {\n  const c = countState('AddBtn');\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => c.addCount(),\n    children: \" add \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = AddBtn;\n\nconst Show = () => {\n  const c = countState('Show');\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: c.count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = Show;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AddBtn\");\n$RefreshReg$(_c3, \"Show\");","map":{"version":3,"sources":["F:/erwin/example/src/App.js"],"names":["useState","observe","state","reflashMap","Map","stateProxy","Proxy","set","target","key","value","r","reflash","countState","count","addCount","setTimeout","funReg","App","c","AddBtn","Show"],"mappings":";AAAA;AACA;AACA;AACA,SAAQA,QAAR,QAAuB,OAAvB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAS;AAAA;;AACvB,QAAMC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;AACA,QAAMC,UAAU,GAAG,IAAIC,KAAJ,CAAUJ,KAAV,EAAgB;AAC/BK,IAAAA,GAAG,CAACC,MAAD,EAAQC,GAAR,EAAYC,KAAZ,EAAkB;AACjBF,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcC,KAAd;;AACA,WAAI,MAAM,CAACC,CAAD,EAAGC,OAAH,CAAV,IAAyBT,UAAU,CAACO,KAAX,EAAzB,EAA4C;AACxCE,QAAAA,OAAO,CAACD,CAAC,GAAC,CAAH,CAAP;AACH;;AACD,aAAO,IAAP;AACH;;AAP8B,GAAhB,CAAnB;AASA,YAAQF,GAAD,IAAO;AAAA;;AACVN,IAAAA,UAAU,CAACI,GAAX,CAAeE,GAAf,EAAmBT,QAAQ,CAAC,CAAD,CAA3B;AACA,WAAOK,UAAP;AACH,GAHD;AAID,CAfD;;AAgBA,MAAMQ,UAAU,GAAGZ,OAAO,CAAC;AACzBa,EAAAA,KAAK,EAAG,CADiB;;AAEzBC,EAAAA,QAAQ,GAAE;AACRC,IAAAA,UAAU,CAAC,MAAM,KAAKF,KAAL,IAAc,CAArB,EAAuB,CAAvB,CAAV;AAED;;AALwB,CAAD,EAMxB;AACAG,EAAAA,MAAM,EAAG;AADT,CANwB,CAA1B;;AAUA,SAASC,GAAT,GAAe;AACb,QAAMC,CAAC,GAAGN,UAAU,CAAC,KAAD,CAApB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGM,CAAC,CAACL,KADL,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGK,CAAC,CAACL,KAAF,GAAS,CAAT,gBAAY,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAZ,GAAoB,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KATQI,G;;AAWT,MAAME,MAAM,GAAG,MAAI;AACjB,QAAMD,CAAC,GAAGN,UAAU,CAAC,QAAD,CAApB;AACA,sBAAO;AAAQ,IAAA,OAAO,EAAE,MAAIM,CAAC,CAACJ,QAAF,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;MAAMK,M;;AAIN,MAAMC,IAAI,GAAG,MAAI;AACf,QAAMF,CAAC,GAAGN,UAAU,CAAC,MAAD,CAApB;AACA,sBAAO;AAAA,cAAKM,CAAC,CAACL;AAAP;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;MAAMO,I;AAKN,eAAeH,GAAf","sourcesContent":["// import {observe,config} from './utils';\r\n// config.private = false;\r\n// config.funReg = /^set/;\r\nimport {useState} from 'react'\r\nconst observe = (state)=>{\r\n  const reflashMap = new Map();\r\n  const stateProxy = new Proxy(state,{\r\n      set(target,key,value){\r\n          target[key] = value;\r\n          for(const [r,reflash] of reflashMap.value()){\r\n              reflash(r+1);\r\n          }\r\n          return true;\r\n      }\r\n  })\r\n  return (key)=>{\r\n      reflashMap.set(key,useState(0))\r\n      return stateProxy\r\n  }\r\n}\r\nconst countState = observe({\r\n  count : 0,\r\n  addCount(){\r\n    setTimeout(()=>  this.count += 1,0)\r\n    \r\n  }\r\n},{\r\n  funReg : /^add/\r\n})\r\n\r\nfunction App() {\r\n  const c = countState('App')\r\n  return (\r\n    <div className=\"App\">\r\n      {c.count}\r\n      <AddBtn/>\r\n      {c.count %2 ?<Show/>:null  }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddBtn = ()=>{\r\n  const c = countState('AddBtn');\r\n  return <button onClick={()=>c.addCount()}> add </button>\r\n} \r\nconst Show = ()=>{ \r\n  const c = countState('Show');\r\n  return <h1>{c.count}</h1>\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}