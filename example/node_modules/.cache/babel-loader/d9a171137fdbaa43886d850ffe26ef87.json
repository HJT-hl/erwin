{"ast":null,"code":"import { useState } from 'react';\nexport const config = {\n  funReg: /^set/,\n  private: true\n};\nexport const observe = (state, options = config) => {\n  var _s = $RefreshSig$();\n\n  const reflashQueue = [];\n  const stateProxy = new Proxy(state, {\n    get(target, key, handler) {\n      if (key.match(options.funReg)) {\n        return target[key].bind(target);\n      }\n\n      return target[key];\n    },\n\n    set(target, key, value) {\n      if (key.match(options.funReg)) return false;\n      target[key] = value;\n      const length = reflashQueue.length;\n\n      for (let i = 0; i < length; i++) {\n        const [r, reflash] = reflashQueue.shift();\n        reflash(r + 1);\n      }\n\n      return true;\n    }\n\n  });\n  return _s(() => {\n    _s();\n\n    reflashQueue.push(useState(0));\n    return stateProxy;\n  }, \"rGEI62VsuwnwPY/75ViYiWAYY24=\");\n};","map":{"version":3,"sources":["C:/Users/HL/Desktop/erwin/src/utils.js"],"names":["useState","config","funReg","private","observe","state","options","reflashQueue","stateProxy","Proxy","get","target","key","handler","match","bind","set","value","length","i","r","reflash","shift","push"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,MAAM,EAAG,MADS;AAElBC,EAAAA,OAAO,EAAE;AAFS,CAAf;AAIP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,OAAO,GAAGL,MAAjB,KAA4B;AAAA;;AAC/C,QAAMM,YAAY,GAAG,EAArB;AACA,QAAMC,UAAU,GAAG,IAAIC,KAAJ,CAAUJ,KAAV,EAAgB;AAC/BK,IAAAA,GAAG,CAACC,MAAD,EAAQC,GAAR,EAAYC,OAAZ,EAAoB;AACnB,UAAGD,GAAG,CAACE,KAAJ,CAAUR,OAAO,CAACJ,MAAlB,CAAH,EAA8B;AAE1B,eAAOS,MAAM,CAACC,GAAD,CAAN,CAAYG,IAAZ,CAAiBJ,MAAjB,CAAP;AACH;;AACD,aAAOA,MAAM,CAACC,GAAD,CAAb;AACH,KAP8B;;AAQ/BI,IAAAA,GAAG,CAACL,MAAD,EAAQC,GAAR,EAAYK,KAAZ,EAAkB;AACjB,UAAGL,GAAG,CAACE,KAAJ,CAAUR,OAAO,CAACJ,MAAlB,CAAH,EAA8B,OAAO,KAAP;AAC9BS,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcK,KAAd;AACA,YAAMC,MAAM,GAAGX,YAAY,CAACW,MAA5B;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,MAAd,EAAqBC,CAAC,EAAtB,EAAyB;AACrB,cAAM,CAACC,CAAD,EAAGC,OAAH,IAAcd,YAAY,CAACe,KAAb,EAApB;AACAD,QAAAA,OAAO,CAACD,CAAC,GAAC,CAAH,CAAP;AACH;;AACD,aAAO,IAAP;AACH;;AAjB8B,GAAhB,CAAnB;AAmBA,YAAO,MAAI;AAAA;;AACPb,IAAAA,YAAY,CAACgB,IAAb,CAAkBvB,QAAQ,CAAC,CAAD,CAA1B;AACA,WAAOQ,UAAP;AACH,GAHD;AAIH,CAzBM","sourcesContent":["import {useState} from 'react';\r\nexport const config = {\r\n    funReg : /^set/,\r\n    private: true\r\n}\r\nexport const observe = (state,options = config ) =>{\r\n    const reflashQueue = [];\r\n    const stateProxy = new Proxy(state,{\r\n        get(target,key,handler){\r\n            if(key.match(options.funReg)) {\r\n                \r\n                return target[key].bind(target);\r\n            }\r\n            return target[key]\r\n        },\r\n        set(target,key,value){\r\n            if(key.match(options.funReg)) return false;\r\n            target[key] = value;\r\n            const length = reflashQueue.length;\r\n            for(let i=0;i<length;i++){\r\n                const [r,reflash] = reflashQueue.shift();\r\n                reflash(r+1);\r\n            }\r\n            return true;\r\n        }\r\n    })\r\n    return ()=>{\r\n        reflashQueue.push(useState(0))\r\n        return stateProxy\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}