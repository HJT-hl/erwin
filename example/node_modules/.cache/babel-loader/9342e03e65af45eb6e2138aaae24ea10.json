{"ast":null,"code":"var _jsxFileName = \"F:\\\\erwin\\\\example\\\\src\\\\App.js\";\nimport { observe, config } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconfig.private = true;\nconfig.funReg = /^set/;\nconst countState = observe({\n  count: 0,\n\n  addCount(value) {\n    console.log(value);\n    setTimeout(() => this.count += value, 0);\n  }\n\n}, {\n  funReg: /^add/\n});\n\nfunction App() {\n  console.log(111111111);\n  const c = countState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [c.count, /*#__PURE__*/_jsxDEV(AddBtn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst AddBtn = () => {\n  const c = countState();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => c.addCount(1000),\n    children: \" add \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = AddBtn;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AddBtn\");","map":{"version":3,"sources":["F:/erwin/example/src/App.js"],"names":["observe","config","private","funReg","countState","count","addCount","value","console","log","setTimeout","App","c","AddBtn"],"mappings":";AAAA,SAAQA,OAAR,EAAgBC,MAAhB,QAA6B,SAA7B;;AACAA,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACAD,MAAM,CAACE,MAAP,GAAgB,MAAhB;AACA,MAAMC,UAAU,GAAGJ,OAAO,CAAC;AACzBK,EAAAA,KAAK,EAAG,CADiB;;AAEzBC,EAAAA,QAAQ,CAACC,KAAD,EAAO;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,IAAAA,UAAU,CAAC,MAAM,KAAKL,KAAL,IAAcE,KAArB,EAA2B,CAA3B,CAAV;AAED;;AANwB,CAAD,EAOxB;AACAJ,EAAAA,MAAM,EAAG;AADT,CAPwB,CAA1B;;AAWA,SAASQ,GAAT,GAAe;AACbH,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAMG,CAAC,GAAGR,UAAU,EAApB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGQ,CAAC,CAACP,KADL,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KATQM,G;;AAWT,MAAME,MAAM,GAAG,MAAI;AACjB,QAAMD,CAAC,GAAGR,UAAU,EAApB;AACA,sBAAO;AAAQ,IAAA,OAAO,EAAE,MAAIQ,CAAC,CAACN,QAAF,CAAW,IAAX,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;MAAMO,M;AAKN,eAAeF,GAAf","sourcesContent":["import {observe,config} from './utils';\r\nconfig.private = true;\r\nconfig.funReg = /^set/;\r\nconst countState = observe({\r\n  count : 0,\r\n  addCount(value){\r\n    console.log(value);\r\n    setTimeout(()=>  this.count += value,0)\r\n    \r\n  }\r\n},{\r\n  funReg : /^add/\r\n})\r\n\r\nfunction App() {\r\n  console.log(111111111)\r\n  const c = countState()\r\n  return (\r\n    <div className=\"App\">\r\n      {c.count}\r\n      <AddBtn/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddBtn = ()=>{\r\n  const c = countState();\r\n  return <button onClick={()=>c.addCount(1000)}> add </button>\r\n} \r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}